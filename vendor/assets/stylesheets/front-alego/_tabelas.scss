/*
================================================================================
TABELAS
================================================================================
*/

// =============================================================================
// Framework da Assembleia Legislativa
// Autor: Alessandro Guarita
// -----------------------------------------------------------------------------
// tabelas.scss
// Criado em: 05/02/2015
// Última alteração: 01/08/2016
// -----------------------------------------------------------------------------
// Definições padrão das tabelas e classes modelo
// -----------------------------------------------------------------------------
// Changelog
// 01/08/2016 | Acrescentado footer da tabela
// 							Ajustado tamanho do input
// 14/07/2016 | Alterado tamanho da fonte
// 01/07/2016 | Correção na especificidade do .tab__acoes no tipo
// 30/06/2016 | Corrigido problema com a última linha da tabela responsiva
// 20/06/2016 | Agora é possível escolher a orientação da tabela responsiva
// 16/05/2016 | Tabelas responsivas
// 11/05/2016 | Acréscimo do arquivo das configurações no modo "default" para
//              evitar incompatibilidade no caso de atualizações do config.scss
// 04/05/2016 | Título agora utiliza a $fonte-titulo ao invés de $fonte-serifa
// 18/04/2016 | Alteração para o novo esquema de cores
// 27/01/2016 | Alterado placeholder para mixin
// 07/01/2016 | Retirado "thead" do seletor "thead th". Agora é todos os <th>
// 							terão a mesma configuração básica, esteja no cabeçalho da tabela
// 							ou na primeira coluna
// 08/12/2015 | Retirada variável de borda
// 23/11/2015 | Alterado tipos para "tipo-x" ao invés de um nome diferente
// 							por tipo
// 17/11/2015 | Utilizada nova forma chamar as classes
// 04/11/2015 | Adaptado para o uso de BEM.
// 						 .tab-col--nome passou a ser apenas .col--nome
// 21/10/2015 | Adequado ao esquema de temas
// 20/10/2015 | Inclusão de tabelas do sistema
// 						  Configurações básicas transferidas para base/config.scss
// 16/10/2015 | Ajustes na tabela de formulário
// 15/10/2015 | Definição de link em bloco
// 15/09/2015 | Alterações estruturais, acréscimos de classes,
// 						  placeholder para a largura da coluna, uso de variáveis para
// 						  definições. Uso de uma classe de tabela, além de extensões
// 05/02/2015 | Criada a base do arquivo
// =============================================================================

// =============================================================================
// CONFIG
// =============================================================================
$tab-tipo: tipo-1 !default; // 2 tipos

$tab--zebra: sim !default;
$tab--responsiva: sim !default;
$tab--responsiva-tipo: tamanho !default; // tamanho | orientação

$tab-acao-link-bloco: não !default;
$tab-col--maximo: 600 !default;
$tab-resp-tamanho: pequeno !default; // pequeno | medio


// =============================================================================
// DEFINIÇÕES PADRÃO DE TABELA
// -----------------------------------------------------------------------------
// Definições básicas
// =============================================================================

table {
	width: 100%;
}
th {
	font-family: $fonte-titulo;
	text-align: left;
	font-size: em(15, 14);
}
tr {
	color: cor(texto);
	tbody & {
		background: cor(fundo, x-claro);
	}
}
th {
	padding: .25em .45em;
	text-transform: uppercase;
}
td {
	line-height: 1;
	padding: .5em;
	font-size: em(12, 14);
}

// =============================================================================
// MIXIN | Media query: orientação ou tamanho
// =============================================================================
@mixin tab-responsiva($tipo) {
	@if $tipo == "tamanho" {
		@include media-tipo($tab-resp-tamanho, max) {
			@content;
		}
	}
	@else {
		@media (orientation: portrait) {
			@content;
		}
	}
}

// =============================================================================
// MIXIN | BÁSICO
// =============================================================================
@mixin tab--opcoes($tag) {
	// ---------------------------------------------------------------------------
	// ZEBRA
	// ---------------------------------------------------------------------------
	@if $tag == zebra {
		tbody tr:nth-child(even) {
			background: cor(tabela, fundo);
			.tab__acoes {
				background: desaturate(cor(tabela, fundo), 15%);
			}
			@if $tab--responsiva == "sim" {
				@include media-tipo($tab-resp-tamanho, max) {
					background: inherit;
					.tab__acoes {
						background: inherit;
					}
				}
			}
		}
	}
	// ---------------------------------------------------------------------------
	// FORM
	// ---------------------------------------------------------------------------
	@else if $tag == form {
		tbody tr:nth-child(even) {
			background: #fff;
		}
		td {
			padding: 0 .25em;
			border-left: 2px solid cor(tabela, borda-clara);
			&:last-child {
				border-right: 2px solid cor(tabela, borda-clara);
			}
		}
		input:not([type="checkbox"]):not([type="radio"]),
		textarea,
		select {
			@include placeholder {
				color: cor(tabela, borda-clara);
				text-transform: uppercase;
			}
			border: 0;
			background: #fff;
			width: 100%;
			padding: .25em;
			font-family: $fonte-sem-serifa;
			&:hover, &:focus {
				border-color: cor(tabela, borda-escura);
				box-shadow: $sombra-padrao;
			}
		}
	}
	// ---------------------------------------------------------------------------
	// RESPONSIVA
	// ---------------------------------------------------------------------------
	@include tab-responsiva($tab--responsiva-tipo) {
		@if $tab--responsiva == "sim" {
			@if $tag == responsiva {
				thead {
					display: none;
				}
			}
			@else if $tag == responsiva-tr {
				margin-bottom: $margem;
				display: block;
				@content;
				&:last-child {
					margin-bottom: 0;
				}
			}
			@else if $tag == responsiva-td {
				display: block;
				text-align: right;
				@content;
				@if $tab--zebra == "sim" {
					&:nth-child(even) {
						background: cor(tabela, fundo);
					}
				}
			}
			@else if $tag == responsiva-td-before {
				&::before {
					content: attr(data-title);
					float: left;
					@content;
				}
			}
			@else if $tag == responsiva-acoes {
				background: transparent;
				@content;
			}
		}
	}
}

// =============================================================================
// MIXIN | TIPOS DE TABELA
// =============================================================================
@mixin tab($tipo) {
	// ---------------------------------------------------------------------------
	// TIPO 1
	// ---------------------------------------------------------------------------
	@if $tipo == tipo-1 {
		@include tab--opcoes(responsiva);
		thead tr {
			color: cor(texto, claro);
			background: cor(tabela, titulo);
			border-bottom: 2px solid cor(tabela, borda-clara);
		}
		tbody tr {
			border-bottom: 1px solid cor(tabela, borda-clara);
			&:nth-child(odd) {
				// Muda a cor da fonte para cinza em linhas intercaladas para telas maiores
				@if $tab--responsiva == "sim" {
					@include media-tipo($tab-resp-tamanho) {
						color: cor(texto, medio);
					}
				}
			}
			@include tab--opcoes(responsiva-tr) {
				border-bottom-width: 2px;
			}
		}
		td {
			@include tab--opcoes(responsiva-td) {
				border-bottom: 1px solid cor(tabela, borda-clara);
				&:last-child {
					border-bottom-width: 0;
				}
			}
			@include tab--opcoes(responsiva-td-before) {
				color: cor(tabela, titulo);
				font-weight: bold;
			}
		}
		&__acoes {
			background: lighten(cor(tabela, fundo), 5%);
			@include tab--opcoes(responsiva-acoes);
		}
		tfoot {
			tr {
				background: cor(tabela, footer);
				border-bottom-width: 0;
			}
			td {
				color: cor(texto, claro);
			}
		}
	}
	// ---------------------------------------------------------------------------
	// TIPO 2
	// ---------------------------------------------------------------------------
	@else if $tipo == tipo-2 {
		border-bottom: 2px solid cor(tabela, borda);
		@include tab--opcoes(responsiva);
		thead tr {
			color: cor(tabela, titulo);
			border-bottom: 2px solid cor(tabela, borda);
		}
		tbody tr {
			border-bottom: 1px dashed cor(tabela, borda);
			&:last-of-type {
				border-bottom: none;
			}
			@include tab--opcoes(responsiva-tr) {
				border-bottom: 1px solid cor(tabela, borda);
			}
		}
		td {
			@include tab--opcoes(responsiva-td) {
				border-bottom: 1px dashed cor(tabela, borda);
				&:last-child {
					border-bottom-width: 0;
				}
			}
			@include tab--opcoes(responsiva-td-before) {
				color: cor(tabela, titulo);
				font-weight: bold;
			}
		}
		&__acoes {
			background: cor(tabela, fundo);
			border-left: 2px solid cor(tabela, borda);
			@include tab--opcoes(responsiva-acoes) {
				border-left: 0;
			}
		}
		tfoot {
			tr {
				border-top: 1px solid cor(tabela, borda);
			}
			td {
				color: cor(tabela, footer);
			}
		}
	}
}

// =============================================================================
// CLASSES MONTADAS
// =============================================================================
@if index($uso-classes, tabela) {
	.tab {
		@include tab($tab-tipo);
		@if $tab--zebra == "sim" {
			@include tab--opcoes(zebra);
		}
		@if $tab--responsiva == "sim" {

		}
	}
	@if index($uso-classes, tabela-form) {
		.tab--form {
			@extend .tab;
			@include tab--opcoes(form);
		}
	}
}

// =============================================================================
// CLASSES INTERNAS
// =============================================================================
// Mixins
// -----------------------------------------------------------------------------
@mixin tab-acoes-icone($bloco: $tab-acao-link-bloco) {
	color: darken(cor(tabela, titulo), 5%);
	font-size: 1.1em;
	@if $bloco == sim {
		display: inline-block;
		padding: .5em;
		&:hover {
			color: cor(texto, clara);
			background: darken(cor(tabela, titulo), 5%);
		}
		@at-root {
			.tab__acoes {
				padding: 0;
			}
		}
	}
	@else if $bloco == não {
		margin-left: .5em;
		margin-right: .5em;
		&:hover {
			color: darken(cor(tabela, titulo), 25%);
		}
		@at-root {
			.tab__acoes {
				button {
					padding: 0;
				}
			}
		}
	}
}
@if index($uso-classes, tabela) {
	//	Título da coluna de ações
	.col--acoes {

	}
	//	Célula de ação
	.tab__acoes {
		a {
			@include tab-acoes-icone;
			text-decoration: none;
		}
		button {
			@include tab-acoes-icone;
			background: transparent;
			border: none;
			cursor: pointer;
			line-height: 1;
		}
	}
}

// =============================================================================
// TAMANHOS DE COLUNAS
// -----------------------------------------------------------------------------
// A função a seguir cria uma série de extends para usar com largura de
// colunas. Crie os nomes de classes com a base .tab-col--[nome-classe],
// exemplo: .tab-col--usuario
// =============================================================================
$tab-col--inicial: 10;
$tab-col--incremento: 1;
$i: $tab-col--inicial;
@while $i <= $tab-col--maximo {
	%largura-col-#{$i} {
		width: $i * rem(1);
	}
	%largura-col-min-#{$i} {
		min-width: $i * rem(1);
	}
	%largura-col-max-#{$i} {
		max-width: $i * rem(1);
	}
	$i: $i + $tab-col--incremento;
}

@each $col, $medida in $largura-tabela-col {
	.col--#{$col} {
		@extend %largura-col-#{$medida};
	}
}
@each $col, $medida in $largura-tabela-col-min {
	.col--#{$col} {
		@extend %largura-col-min-#{$medida};
	}
}
@each $col, $medida in $largura-tabela-col-max {
	.col--#{$col} {
		@extend %largura-col-max-#{$medida};
	}
}

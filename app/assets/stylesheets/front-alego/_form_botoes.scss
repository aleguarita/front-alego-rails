@if index($uso-classes, botao) {
/*
================================================================================
FORMULÁRIO | BOTÕES
================================================================================
*/
}

// =============================================================================
// Framework da Assembleia Legislativa
// Autor: Alessandro Guarita
// -----------------------------------------------------------------------------
// form_botoes.scss
// Criado em: 15/01/2015
// Última alteração em: 23/09/2016
// -----------------------------------------------------------------------------
// Definições de botões para formulários
// -----------------------------------------------------------------------------
// Changelog
// 23/09/2016 | Alterada forma que os botões aparecem se for dentro da .tab--form
// 06/09/2016 | Retirada referência à retrocompatibilidade (já estava
//              retrocompatível uma vez que não acrescentei cores novas, apenas
//              tirei cores da paleta)
//              Incluíndo um :hover para a cor do texto, mesmo que não mude
//              (para funcionar com links)
// 05/09/2016 | Reformulado a forma dos botões, incluindo cores e uso de mixin
// 25/08/2016 | Ajustes para quando o .bt estiver na em um link
// 14/07/2016 | Padronizado o tamanho do botão para 1em
// 24/06/2016 | Retirado o tamanho da fonte do botão e acrescentado caso seja
//              filho de um <p> (o botão estava ficando muito grande quando não
//              precisava)
// 11/05/2016 | Acréscimo do arquivo das configurações no modo "default" para
//              evitar incompatibilidade no caso de atualizações do config.scss
// 05/05/2016 | Arrumado problema de borda
// 13/04/2016 | Adequado à nova paleta de cores
// 05/02/2016 | Ajustado o tamanho do botão
//              Acrescando arredondamento de botão
// 21/01/2016 | Era pra isso aqui usar mixins. Não é prático.
// 23/11/2015 | Botões de status
//              Utilizada nova forma chamar as classes
// 13/11/2015 | Arquivo reescrito usando os novos padrões
// 15/01/2015 | Criação do arquivo
// =============================================================================

// =============================================================================
// CONFIG
// =============================================================================
$botao-tipo: tipo-5 !default; // 6 tipos
$botao-secundario: $botao-tipo !default; // 6 tipos + $botao-tipo
$botao-sombra-colorida: sim !default;
$botao-arredondamento: não !default;

// =============================================================================
// VARIÁVEIS
// =============================================================================
$bt-sombra: if($botao-sombra-colorida == "sim", 0 0 6px, $sombra-botao);

// =============================================================================
// MIXIN
// =============================================================================
@mixin botao(
$tipo: $botao-tipo,
$cor: cor(botao),
$botao-arredondamento: $botao-arredondamento
) {
  // ---------------------------------------------------------------------------
  // FAZ O LINK PARECER BOTÃO
  // ---------------------------------------------------------------------------
  @at-root {
    a#{&} {
      text-decoration: none;
      text-align: center;
    }
  }
  // ---------------------------------------------------------------------------
  // MUDA A CONFIGURAÇÃO DO BOTÃO PARA O CASO DE APARECER DENTRO DA tabela-form
  // ---------------------------------------------------------------------------
  @if index($uso-classes, tabela-form) {
		.tab--form & {
			width: 100%;
		}
	}
  // ---------------------------------------------------------------------------
  // CONFIGURAÇÕES BÁSICAS DO BOTÃO
  // ---------------------------------------------------------------------------
  padding: .5em 1em;
  cursor: pointer;
  font-weight: bold;
  text-transform: uppercase;
  transition: background 0.5s ease 0s;
  font-size: $tamanho-fonte-padrao;
  @if $botao-arredondamento != não {
    border-radius: $rd;
  }
  // ---------------------------------------------------------------------------
  // TIPO 1
  // ---------------------------------------------------------------------------
  @if $tipo == tipo-1 {
    background: transparent;
    color: if(lightness($cor) < 40, $cor, shade($cor, 15));
    border: 1px solid transparent;
    &:hover {
      box-shadow: $bt-sombra;
      color: if(lightness($cor) < 40, $cor, shade($cor, 15));
    }
  }
  // ---------------------------------------------------------------------------
  // TIPO 2
  // ---------------------------------------------------------------------------
  @if $tipo == tipo-2 {
    background: transparent;
    color: if(lightness($cor) < 40, $cor, shade($cor, 15));
    border: 1px solid;
    &:hover {
      outline: 1px solid;
      color: if(lightness($cor) < 40, $cor, shade($cor, 15));
    }
  }
  // ---------------------------------------------------------------------------
  // TIPO 3
  // ---------------------------------------------------------------------------
  @if $tipo == tipo-3 {
    border: 1px solid shade($cor, 25);
    color: if(lightness($cor) < 40, $cor, shade($cor, 15));
    background: tint($cor, 75);
    &:hover {
      background: tint($cor, 90);
      color: if(lightness($cor) < 40, $cor, shade($cor, 15));
    }
  }
  // ---------------------------------------------------------------------------
  // TIPO 4
  // ---------------------------------------------------------------------------
  @if $tipo == tipo-4 {
    border: 1px solid shade($cor, 25);
    color: if(lightness($cor) < 40, $cor, shade($cor, 15));
    background: linear-gradient(to top, tint($cor, 75), tint($cor, 90));
    &:hover {
      // uso de gradiente pra evitar a piscada no hover
      background: linear-gradient(to top, tint($cor, 90), tint($cor, 90));
      color: if(lightness($cor) < 40, $cor, shade($cor, 15));
    }
  }
  // ---------------------------------------------------------------------------
  // TIPO 5
  // ---------------------------------------------------------------------------
  @if $tipo == tipo-5 {
    background: $cor;
    color: cor(texto, claro);
    border: 1px solid $cor;
    &:hover {
      color: cor(texto, claro);
      background: shade($cor, 24);
      border-color: shade($cor, 24);
    }
  }
  // ---------------------------------------------------------------------------
  // TIPO 6
  // ---------------------------------------------------------------------------
  @if $tipo == tipo-6 {
    background: linear-gradient(to top, $cor, tint($cor, 25%));
    color: cor(texto, claro);
    border: 1px solid $cor;
    text-shadow: $sombra-texto-relevo;
    &:hover {
      color: cor(texto, claro);
      background: linear-gradient(to bottom, shade($cor, 25), tint($cor, 25%));
      border-color: shade($cor, 24);
    }
  }
}

// =============================================================================
// CLASSE
// =============================================================================
@if index($uso-classes, botao) {
  //--------------------------------------------------------------------------
  // BOTÃO BÁSICO
  //--------------------------------------------------------------------------
  .bt {
    @include botao($botao-tipo);
  }
  //--------------------------------------------------------------------------
  // BOTÃO STATUS
  //--------------------------------------------------------------------------
  @each $status in $botoes-status {
    /* BOTÃO STATUS: #{$status} */
    .bt--#{$status} {
      @include botao($botao-tipo, cor-status(#{$status}));
    }
  }
  //--------------------------------------------------------------------------
  // BOTÃO SECUNDÁRIO
  //--------------------------------------------------------------------------
  @if index($uso-classes, botao-secundario) {
    /* BOTÃO SECUNDÁRIO */
    .bt--secundario {
      @if $botao-tipo == $botao-secundario {
        @include botao($botao-tipo, cor(botao, secundario));
      } @else {
        @include botao($botao-secundario);
      }
    }
  }
}
